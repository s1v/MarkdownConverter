@page "/"

<PageTitle>Markdown HTML Converter</PageTitle>

<DropZone Style="height: 100%;" OnFileSelected=@Convert />

@code {
    [Inject]
    IBlazorDownloadFileService downloader { get; set; } = default!;

    async Task Convert(InputFileChangeEventArgs args)
    {
        await downloader.DownloadFileAsync("MarkdownHTMLs.zip", await CreateZip(args.GetMultipleFiles(args.FileCount)));
    }

    async Task<string> GetHtmlFromStream(Stream stream)
    {
        using (var reader = new StreamReader(stream))
        {
            return Markdown.ToHtml(await reader.ReadToEndAsync());
        }
    }

    async Task<byte[]> CreateZip(IEnumerable<IBrowserFile> files)
    {
        using (MemoryStream zipStream = new MemoryStream())
        {
            using (ZipArchive archive = new ZipArchive(zipStream, ZipArchiveMode.Create))
            {
                foreach (var file in files)
                {
                    ZipArchiveEntry fileEntry = archive.CreateEntry(file.Name);
                    using (var fileStream = file.OpenReadStream(52428800))
                    {
                        using (StreamWriter writer = new StreamWriter(fileEntry.Open()))
                        {
                            writer.WriteLine(await GetHtmlFromStream(fileStream));
                        }
                    }
                }
            }
            return zipStream.ToArray();
        }
    }
}